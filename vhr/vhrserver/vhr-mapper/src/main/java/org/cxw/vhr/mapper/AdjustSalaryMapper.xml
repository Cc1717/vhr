<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.cxw.vhr.mapper.AdjustSalaryMapper" >
  <resultMap id="BaseResultMap" type="org.cxw.vhr.model.AdjustSalary" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="eid" property="eid" jdbcType="INTEGER" />
    <result column="asDate" property="asDate" jdbcType="DATE" />
    <result column="effectiveDate" property="effectiveDate" jdbcType="DATE" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="content" property="content" jdbcType="CHAR" />
    <result column="reason" property="reason" jdbcType="VARCHAR" />
    <result column="beforeSalary" property="beforeSalary" jdbcType="INTEGER" />
    <result column="afterSalary" property="afterSalary" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="AdjustSalaryWithEmployee" type="org.cxw.vhr.model.AdjustSalary" extends="BaseResultMap">
    <association property="employee" javaType="org.cxw.vhr.model.Employee">
      <result column="name" property="name" jdbcType="VARCHAR"/>
      <result column="workID" property="workID" jdbcType="VARCHAR"/>
      <association property="department" javaType="org.cxw.vhr.model.Department">
        <result column="dname" property="name" jdbcType="VARCHAR"/>
      </association>
    </association>
  </resultMap>

  <sql id="Base_Column_List" >
    id, eid, asDate, effectiveDate, type, content, reason, beforeSalary, afterSalary, 
    remark
  </sql>

  <select id="getNewRecord" resultMap="BaseResultMap">
    select * from adjustsalary where eid=#{eid} and content=#{content} order by effectiveDate desc limit 1
  </select>

  <select id="getTotal" resultType="java.lang.Long">
    select count(*) from adjustsalary a,employee e where a.eid=e.id
    <if test="employee!=null">
      <if test="employee.name!=null and employee.name!=''">
        and e.name like concat('%',#{employee.name},'%')
      </if>
      <if test="employee.workID!=null and employee.workID!=''">
        and e.workID=#{employee.workID}
      </if>
    </if>
    <if test="timeScope!=null">
      and a.asDate between #{timeScope[0]} and #{timeScope[1]}
    </if>
  </select>

  <select id="getAdjustSalariesByPage" resultMap="AdjustSalaryWithEmployee">
    select a.*,e.name,e.workID,d.name as dname from adjustsalary a,employee e,department d where a.eid=e.id and e.departmentId=d.id
    <if test="employee!=null">
      <if test="employee.name!=null and employee.name!=''">
        and e.name like concat('%',#{employee.name},'%')
      </if>
      <if test="employee.workID!=null and employee.workID!=''">
        and e.workID=#{employee.workID}
      </if>
    </if>
    <if test="timeScope!=null">
      and a.asDate between #{timeScope[0]} and #{timeScope[1]}
    </if>
    <if test="page!=null and size!=null">
        limit #{page},#{size}
    </if>
  </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from adjustsalary
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from adjustsalary
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.cxw.vhr.model.AdjustSalary" >
    insert into adjustsalary (id, eid, asDate, 
      effectiveDate, type, content, 
      reason, beforeSalary, afterSalary, 
      remark)
    values (#{id,jdbcType=INTEGER}, #{eid,jdbcType=INTEGER}, #{asDate,jdbcType=DATE}, 
      #{effectiveDate,jdbcType=DATE}, #{type,jdbcType=INTEGER}, #{content,jdbcType=CHAR},
      #{reason,jdbcType=VARCHAR}, #{beforeSalary,jdbcType=INTEGER}, #{afterSalary,jdbcType=INTEGER}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.cxw.vhr.model.AdjustSalary" >
    insert into adjustsalary
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="eid != null" >
        eid,
      </if>
      <if test="asDate != null" >
        asDate,
      </if>
      <if test="effectiveDate != null" >
        effectiveDate,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="reason != null" >
        reason,
      </if>
      <if test="beforeSalary != null" >
        beforeSalary,
      </if>
      <if test="afterSalary != null" >
        afterSalary,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="eid != null" >
        #{eid,jdbcType=INTEGER},
      </if>
      <if test="asDate != null" >
        #{asDate,jdbcType=DATE},
      </if>
      <if test="effectiveDate != null" >
        #{effectiveDate,jdbcType=DATE},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=CHAR},
      </if>
      <if test="reason != null" >
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="beforeSalary != null" >
        #{beforeSalary,jdbcType=INTEGER},
      </if>
      <if test="afterSalary != null" >
        #{afterSalary,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.cxw.vhr.model.AdjustSalary" >
    update adjustsalary
    <set >
      <if test="eid != null" >
        eid = #{eid,jdbcType=INTEGER},
      </if>
      <if test="asDate != null" >
        asDate = #{asDate,jdbcType=DATE},
      </if>
      <if test="effectiveDate != null" >
        effectiveDate = #{effectiveDate,jdbcType=DATE},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=CHAR},
      </if>
      <if test="reason != null" >
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="beforeSalary != null" >
        beforeSalary = #{beforeSalary,jdbcType=INTEGER},
      </if>
      <if test="afterSalary != null" >
        afterSalary = #{afterSalary,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.cxw.vhr.model.AdjustSalary" >
    update adjustsalary
    set eid = #{eid,jdbcType=INTEGER},
      asDate = #{asDate,jdbcType=DATE},
      effectiveDate = #{effectiveDate,jdbcType=DATE},
      type = #{type,jdbcType=INTEGER},
      content = #{content,jdbcType=CHAR},
      reason = #{reason,jdbcType=VARCHAR},
      beforeSalary = #{beforeSalary,jdbcType=INTEGER},
      afterSalary = #{afterSalary,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>