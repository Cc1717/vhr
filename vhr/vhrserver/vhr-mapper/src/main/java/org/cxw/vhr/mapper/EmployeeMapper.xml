<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.cxw.vhr.mapper.EmployeeMapper">
    <resultMap id="BaseResultMap" type="org.cxw.vhr.model.Employee">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="gender" property="gender" jdbcType="CHAR"/>
        <result column="birthday" property="birthday" jdbcType="DATE"/>
        <result column="idCard" property="idCard" jdbcType="CHAR"/>
        <result column="wedlock" property="wedlock" jdbcType="CHAR"/>
        <result column="nationId" property="nationId" jdbcType="INTEGER"/>
        <result column="nativePlace" property="nativePlace" jdbcType="VARCHAR"/>
        <result column="politicId" property="politicId" jdbcType="INTEGER"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
        <result column="departmentId" property="departmentId" jdbcType="INTEGER"/>
        <result column="jobLevelId" property="jobLevelId" jdbcType="INTEGER"/>
        <result column="posId" property="posId" jdbcType="INTEGER"/>
        <result column="engageForm" property="engageForm" jdbcType="VARCHAR"/>
        <result column="tiptopDegree" property="tiptopDegree" jdbcType="CHAR"/>
        <result column="specialty" property="specialty" jdbcType="VARCHAR"/>
        <result column="school" property="school" jdbcType="VARCHAR"/>
        <result column="beginDate" property="beginDate" jdbcType="DATE"/>
        <result column="workState" property="workState" jdbcType="CHAR"/>
        <result column="workID" property="workID" jdbcType="CHAR"/>
        <result column="contractTerm" property="contractTerm" jdbcType="DOUBLE"/>
        <result column="conversionTime" property="conversionTime" jdbcType="DATE"/>
        <result column="notWorkDate" property="notWorkDate" jdbcType="DATE"/>
        <result column="beginContract" property="beginContract" jdbcType="DATE"/>
        <result column="endContract" property="endContract" jdbcType="DATE"/>
        <result column="workAge" property="workAge" jdbcType="INTEGER"/>
        <result column="number" property="number" jdbcType="INTEGER"/>
    </resultMap>
    <resultMap id="AllEmployeeInfo" type="org.cxw.vhr.model.Employee" extends="BaseResultMap">
        <association property="nation" javaType="org.cxw.vhr.model.Nation">
            <id column="nid" property="id" jdbcType="INTEGER"/>
            <result column="nname" property="name" jdbcType="VARCHAR"/>
        </association>
        <association property="politicsstatus" javaType="org.cxw.vhr.model.Politicsstatus">
            <id column="pid" property="id" jdbcType="INTEGER"/>
            <result column="pname" property="name" jdbcType="VARCHAR"/>
        </association>
        <association property="department" javaType="org.cxw.vhr.model.Department">
            <id column="did" property="id" jdbcType="INTEGER"/>
            <result column="dname" property="name" jdbcType="VARCHAR"/>
        </association>
        <association property="jobLevel" javaType="org.cxw.vhr.model.JobLevel">
            <id column="jid" property="id" jdbcType="INTEGER"/>
            <result column="jname" property="name" jdbcType="VARCHAR"/>
        </association>
        <association property="position" javaType="org.cxw.vhr.model.Position">
            <id column="positionid" property="id" jdbcType="INTEGER"/>
            <result column="posname" property="name" jdbcType="VARCHAR"/>
        </association>
    </resultMap>
    <resultMap id="EmployeeWithSalary" type="org.cxw.vhr.model.Employee" extends="BaseResultMap">
        <association property="salary" javaType="org.cxw.vhr.model.Salary">
            <id column="sid" property="id" jdbcType="INTEGER"/>
            <result column="sname" property="name" jdbcType="VARCHAR"/>
            <result column="basicSalary" property="basicSalary" jdbcType="INTEGER"/>
            <result column="bonus" property="bonus" jdbcType="INTEGER"/>
            <result column="lunchSalary" property="lunchSalary" jdbcType="INTEGER"/>
            <result column="trafficSalary" property="trafficSalary" jdbcType="INTEGER"/>
            <result column="pensionBase" property="pensionBase" jdbcType="INTEGER"/>
            <result column="pensionPer" property="pensionPer" jdbcType="REAL"/>
            <result column="createDate" property="createDate" jdbcType="TIMESTAMP"/>
            <result column="medicalBase" property="medicalBase" jdbcType="INTEGER"/>
            <result column="medicalPer" property="medicalPer" jdbcType="REAL"/>
            <result column="accumulationFundBase" property="accumulationFundBase" jdbcType="INTEGER"/>
            <result column="accumulationFundPer" property="accumulationFundPer" jdbcType="REAL"/>
        </association>
        <association property="department" javaType="org.cxw.vhr.model.Department">
            <result column="dname" property="name" jdbcType="VARCHAR"/>
        </association>
    </resultMap>
    <sql id="Base_Column_List">
    id, name, gender, birthday, idCard, wedlock, nationId, nativePlace, politicId, email, 
    phone, address, departmentId, jobLevelId, posId, engageForm, tiptopDegree, specialty, 
    school, beginDate, workState, workID, contractTerm, conversionTime, notWorkDate, 
    beginContract, endContract, workAge
  </sql>

    <select id="getTiptopDegree" resultMap="BaseResultMap">
        select tiptopDegree,count(*) as number from employee GROUP BY tiptopDegree
    </select>

    <select id="getEmployeeByWorkID" resultMap="AllEmployeeInfo">
        select e.*,d.name as dname from employee e,department d where e.workID=#{workID} and e.departmentId=d.id
    </select>

    <select id="maxWorkID" resultType="java.lang.Integer">
        select max(workID) from employee
    </select>

    <select id="getEmployeesWithSalaryByPage" resultMap="EmployeeWithSalary">
        select e.*,d.name as dname,s.id as sid,s.name as sname,s.basicSalary,s.bonus,s.lunchSalary,
        s.trafficSalary,s.pensionBase,s.pensionPer,s.createDate,s.medicalBase,s.medicalPer,s.accumulationFundBase,
        s.accumulationFundPer from employee e left join empsalary es on e.id=es.eid left join salary s on es.sid=s.id
        left join department d on e.departmentId=d.id
        <if test="empName!=null and empName!=''">
            where e.name like concat('%',#{empName},'%')
        </if>
        <if test="page!=null and size!=null">
            limit #{page},#{size}
        </if>
    </select>

    <select id="getEmployeesByPage" resultMap="AllEmployeeInfo">
        select e.*,n.id as nid,n.`name` as nname,p.id as pid,p.`name` as pname,d.id as did,d.`name` as dname,j.id as
        jid,
        j.`name` as jname,pos.id as positionid,pos.`name` as posname from employee e,nation n,politicsstatus
        p,department d,
        joblevel j,position pos where e.nationId=n.id and e.politicId=p.id and e.departmentId=d.id and e.jobLevelId=j.id
        and e.posId=pos.id
        <if test="employee!=null">
            <if test="employee.id!=null">
                and e.id=#{employee.id}
            </if>
            <if test="employee.name!=null and employee.name!=''">
                and e.name like concat('%',#{employee.name},'%')
            </if>
            <if test="employee.nationId!=null">
                and e.nationId=#{employee.nationId}
            </if>
            <if test="employee.posId!=null">
                and e.posId=#{employee.posId}
            </if>
            <if test="employee.jobLevelId!=null">
                and e.jobLevelId=#{employee.jobLevelId}
            </if>
            <if test="employee.politicId!=null">
                and e.politicId=#{employee.politicId}
            </if>
            <if test="employee.departmentId!=null">
                and e.departmentId=#{employee.departmentId}
            </if>
            <if test="employee.engageForm!=null and employee.engageForm!=''">
                and e.engageForm=#{employee.engageForm}
            </if>
        </if>
        <if test="beginDateScope!=null">
            and e.beginDate between #{beginDateScope[0]} and #{beginDateScope[1]}
        </if>
        <if test="page!=null and size!=null">
            limit #{page},#{size}
        </if>
    </select>

    <select id="getTotal" resultType="java.lang.Long">
        select count(*) from employee
        <where>
            <if test="employee!=null">
                <if test="employee.name!=null and employee.name!=''">
                    and name like concat('%',#{employee.name},'%')
                </if>
                <if test="employee.nationId!=null">
                    and nationId=#{employee.nationId}
                </if>
                <if test="employee.posId!=null">
                    and posId=#{employee.posId}
                </if>
                <if test="employee.jobLevelId!=null">
                    and jobLevelId=#{employee.jobLevelId}
                </if>
                <if test="employee.politicId!=null">
                    and politicId=#{employee.politicId}
                </if>
                <if test="employee.departmentId!=null">
                    and departmentId=#{employee.departmentId}
                </if>
                <if test="employee.engageForm!=null and employee.engageForm!=''">
                    and engageForm=#{employee.engageForm}
                </if>
            </if>
            <if test="beginDateScope!=null">
                and beginDate between #{beginDateScope[0]} and #{beginDateScope[1]}
            </if>
        </where>
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from employee
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from employee
    where id = #{id,jdbcType=INTEGER}
  </delete>

    <insert id="addEmployees">
        insert into employee (name, gender,
        birthday, idCard, wedlock, nationId,
        nativePlace, politicId, email,
        phone, address, departmentId,
        jobLevelId, posId, engageForm,
        tiptopDegree, specialty, school,
        beginDate, workState, workID,
        contractTerm, conversionTime, notWorkDate,
        beginContract, endContract, workAge
        ) values
        <foreach collection="employees" item="employee" separator=",">
            (#{employee.name,jdbcType=VARCHAR}, #{employee.gender,jdbcType=CHAR},
            #{employee.birthday,jdbcType=DATE}, #{employee.idCard,jdbcType=CHAR}, #{employee.wedlock,jdbcType=CHAR},
            #{employee.nationId,jdbcType=INTEGER},
            #{employee.nativePlace,jdbcType=VARCHAR}, #{employee.politicId,jdbcType=INTEGER},
            #{employee.email,jdbcType=VARCHAR},
            #{employee.phone,jdbcType=VARCHAR}, #{employee.address,jdbcType=VARCHAR},
            #{employee.departmentId,jdbcType=INTEGER},
            #{employee.jobLevelId,jdbcType=INTEGER}, #{employee.posId,jdbcType=INTEGER},
            #{employee.engageForm,jdbcType=VARCHAR},
            #{employee.tiptopDegree,jdbcType=CHAR}, #{employee.specialty,jdbcType=VARCHAR},
            #{employee.school,jdbcType=VARCHAR},
            #{employee.beginDate,jdbcType=DATE}, #{employee.workState,jdbcType=CHAR}, #{employee.workID,jdbcType=CHAR},
            #{employee.contractTerm,jdbcType=DOUBLE}, #{employee.conversionTime,jdbcType=DATE},
            #{employee.notWorkDate,jdbcType=DATE},
            #{employee.beginContract,jdbcType=DATE}, #{employee.endContract,jdbcType=DATE},
            #{employee.workAge,jdbcType=INTEGER}
            )
        </foreach>
    </insert>

    <insert id="insert" parameterType="org.cxw.vhr.model.Employee">
    insert into employee (id, name, gender, 
      birthday, idCard, wedlock, nationId, 
      nativePlace, politicId, email, 
      phone, address, departmentId, 
      jobLevelId, posId, engageForm, 
      tiptopDegree, specialty, school, 
      beginDate, workState, workID, 
      contractTerm, conversionTime, notWorkDate, 
      beginContract, endContract, workAge
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{gender,jdbcType=CHAR}, 
      #{birthday,jdbcType=DATE}, #{idCard,jdbcType=CHAR}, #{wedlock,jdbcType=CHAR}, #{nationId,jdbcType=INTEGER}, 
      #{nativePlace,jdbcType=VARCHAR}, #{politicId,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{departmentId,jdbcType=INTEGER}, 
      #{jobLevelId,jdbcType=INTEGER}, #{posId,jdbcType=INTEGER}, #{engageForm,jdbcType=VARCHAR}, 
      #{tiptopDegree,jdbcType=CHAR}, #{specialty,jdbcType=VARCHAR}, #{school,jdbcType=VARCHAR}, 
      #{beginDate,jdbcType=DATE}, #{workState,jdbcType=CHAR}, #{workID,jdbcType=CHAR}, 
      #{contractTerm,jdbcType=DOUBLE}, #{conversionTime,jdbcType=DATE}, #{notWorkDate,jdbcType=DATE}, 
      #{beginContract,jdbcType=DATE}, #{endContract,jdbcType=DATE}, #{workAge,jdbcType=INTEGER}
      )
  </insert>
    <insert id="insertSelective" parameterType="org.cxw.vhr.model.Employee" useGeneratedKeys="true" keyProperty="id">
        insert into employee
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="gender != null">
                gender,
            </if>
            <if test="birthday != null">
                birthday,
            </if>
            <if test="idCard != null">
                idCard,
            </if>
            <if test="wedlock != null">
                wedlock,
            </if>
            <if test="nationId != null">
                nationId,
            </if>
            <if test="nativePlace != null">
                nativePlace,
            </if>
            <if test="politicId != null">
                politicId,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="departmentId != null">
                departmentId,
            </if>
            <if test="jobLevelId != null">
                jobLevelId,
            </if>
            <if test="posId != null">
                posId,
            </if>
            <if test="engageForm != null">
                engageForm,
            </if>
            <if test="tiptopDegree != null">
                tiptopDegree,
            </if>
            <if test="specialty != null">
                specialty,
            </if>
            <if test="school != null">
                school,
            </if>
            <if test="beginDate != null">
                beginDate,
            </if>
            <if test="workState != null">
                workState,
            </if>
            <if test="workID != null">
                workID,
            </if>
            <if test="contractTerm != null">
                contractTerm,
            </if>
            <if test="conversionTime != null">
                conversionTime,
            </if>
            <if test="notWorkDate != null">
                notWorkDate,
            </if>
            <if test="beginContract != null">
                beginContract,
            </if>
            <if test="endContract != null">
                endContract,
            </if>
            <if test="workAge != null">
                workAge,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                #{gender,jdbcType=CHAR},
            </if>
            <if test="birthday != null">
                #{birthday,jdbcType=DATE},
            </if>
            <if test="idCard != null">
                #{idCard,jdbcType=CHAR},
            </if>
            <if test="wedlock != null">
                #{wedlock,jdbcType=CHAR},
            </if>
            <if test="nationId != null">
                #{nationId,jdbcType=INTEGER},
            </if>
            <if test="nativePlace != null">
                #{nativePlace,jdbcType=VARCHAR},
            </if>
            <if test="politicId != null">
                #{politicId,jdbcType=INTEGER},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="departmentId != null">
                #{departmentId,jdbcType=INTEGER},
            </if>
            <if test="jobLevelId != null">
                #{jobLevelId,jdbcType=INTEGER},
            </if>
            <if test="posId != null">
                #{posId,jdbcType=INTEGER},
            </if>
            <if test="engageForm != null">
                #{engageForm,jdbcType=VARCHAR},
            </if>
            <if test="tiptopDegree != null">
                #{tiptopDegree,jdbcType=CHAR},
            </if>
            <if test="specialty != null">
                #{specialty,jdbcType=VARCHAR},
            </if>
            <if test="school != null">
                #{school,jdbcType=VARCHAR},
            </if>
            <if test="beginDate != null">
                #{beginDate,jdbcType=DATE},
            </if>
            <if test="workState != null">
                #{workState,jdbcType=CHAR},
            </if>
            <if test="workID != null">
                #{workID,jdbcType=CHAR},
            </if>
            <if test="contractTerm != null">
                #{contractTerm,jdbcType=DOUBLE},
            </if>
            <if test="conversionTime != null">
                #{conversionTime,jdbcType=DATE},
            </if>
            <if test="notWorkDate != null">
                #{notWorkDate,jdbcType=DATE},
            </if>
            <if test="beginContract != null">
                #{beginContract,jdbcType=DATE},
            </if>
            <if test="endContract != null">
                #{endContract,jdbcType=DATE},
            </if>
            <if test="workAge != null">
                #{workAge,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="org.cxw.vhr.model.Employee">
        update employee
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                gender = #{gender,jdbcType=CHAR},
            </if>
            <if test="birthday != null">
                birthday = #{birthday,jdbcType=DATE},
            </if>
            <if test="idCard != null">
                idCard = #{idCard,jdbcType=CHAR},
            </if>
            <if test="wedlock != null">
                wedlock = #{wedlock,jdbcType=CHAR},
            </if>
            <if test="nationId != null">
                nationId = #{nationId,jdbcType=INTEGER},
            </if>
            <if test="nativePlace != null">
                nativePlace = #{nativePlace,jdbcType=VARCHAR},
            </if>
            <if test="politicId != null">
                politicId = #{politicId,jdbcType=INTEGER},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="departmentId != null">
                departmentId = #{departmentId,jdbcType=INTEGER},
            </if>
            <if test="jobLevelId != null">
                jobLevelId = #{jobLevelId,jdbcType=INTEGER},
            </if>
            <if test="posId != null">
                posId = #{posId,jdbcType=INTEGER},
            </if>
            <if test="engageForm != null">
                engageForm = #{engageForm,jdbcType=VARCHAR},
            </if>
            <if test="tiptopDegree != null">
                tiptopDegree = #{tiptopDegree,jdbcType=CHAR},
            </if>
            <if test="specialty != null">
                specialty = #{specialty,jdbcType=VARCHAR},
            </if>
            <if test="school != null">
                school = #{school,jdbcType=VARCHAR},
            </if>
            <if test="beginDate != null">
                beginDate = #{beginDate,jdbcType=DATE},
            </if>
            <if test="workState != null">
                workState = #{workState,jdbcType=CHAR},
            </if>
            <if test="workID != null">
                workID = #{workID,jdbcType=CHAR},
            </if>
            <if test="contractTerm != null">
                contractTerm = #{contractTerm,jdbcType=DOUBLE},
            </if>
            <if test="conversionTime != null">
                conversionTime = #{conversionTime,jdbcType=DATE},
            </if>
            <if test="notWorkDate != null">
                notWorkDate = #{notWorkDate,jdbcType=DATE},
            </if>
            <if test="beginContract != null">
                beginContract = #{beginContract,jdbcType=DATE},
            </if>
            <if test="endContract != null">
                endContract = #{endContract,jdbcType=DATE},
            </if>
            <if test="workAge != null">
                workAge = #{workAge,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="org.cxw.vhr.model.Employee">
    update employee
    set name = #{name,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=CHAR},
      birthday = #{birthday,jdbcType=DATE},
      idCard = #{idCard,jdbcType=CHAR},
      wedlock = #{wedlock,jdbcType=CHAR},
      nationId = #{nationId,jdbcType=INTEGER},
      nativePlace = #{nativePlace,jdbcType=VARCHAR},
      politicId = #{politicId,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      departmentId = #{departmentId,jdbcType=INTEGER},
      jobLevelId = #{jobLevelId,jdbcType=INTEGER},
      posId = #{posId,jdbcType=INTEGER},
      engageForm = #{engageForm,jdbcType=VARCHAR},
      tiptopDegree = #{tiptopDegree,jdbcType=CHAR},
      specialty = #{specialty,jdbcType=VARCHAR},
      school = #{school,jdbcType=VARCHAR},
      beginDate = #{beginDate,jdbcType=DATE},
      workState = #{workState,jdbcType=CHAR},
      workID = #{workID,jdbcType=CHAR},
      contractTerm = #{contractTerm,jdbcType=DOUBLE},
      conversionTime = #{conversionTime,jdbcType=DATE},
      notWorkDate = #{notWorkDate,jdbcType=DATE},
      beginContract = #{beginContract,jdbcType=DATE},
      endContract = #{endContract,jdbcType=DATE},
      workAge = #{workAge,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>